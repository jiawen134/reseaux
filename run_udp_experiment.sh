#!/bin/bash

# Script d'ex√©cution de l'exp√©rience d'analyse UDP
# Ce script guidera l'utilisateur √† travers les √©tapes de l'exp√©rience d'analyse UDP

echo "================================="
echo "    Exp√©rience d'analyse UDP"
echo "================================="
echo

# V√©rifier les permissions
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå Veuillez ex√©cuter ce script avec sudo pour obtenir les privil√®ges de capture"
    echo "   Utilisation: sudo ./run_udp_experiment.sh"
    exit 1
fi

# V√©rifier les outils n√©cessaires
echo "üîç V√©rification des outils n√©cessaires..."
missing_tools=()

if ! command -v tcpdump &> /dev/null; then
    missing_tools+=("tcpdump")
fi

if ! command -v nslookup &> /dev/null; then
    missing_tools+=("nslookup")
fi

if [ ${#missing_tools[@]} -ne 0 ]; then
    echo "‚ùå Outils manquants: ${missing_tools[*]}"
    echo "Veuillez installer: sudo apt-get install tcpdump dnsutils"
    exit 1
fi

echo "‚úÖ V√©rification des outils termin√©e"

# Configurer les param√®tres de l'exp√©rience
CAPTURE_FILE="dns_capture.pcap"
DNS_TARGET="www.google.com"
CAPTURE_DURATION=10

echo
echo "üìã Param√®tres de l'exp√©rience:"
echo "   - Fichier de capture: $CAPTURE_FILE"
echo "   - Cible de requ√™te DNS: $DNS_TARGET"
echo "   - Dur√©e de capture: ${CAPTURE_DURATION} secondes"
echo

# Commencer la capture
echo "üéØ D√©but de la capture de trafic DNS (${CAPTURE_DURATION} secondes)..."
timeout $CAPTURE_DURATION tcpdump -i any -n -s 0 -w $CAPTURE_FILE port 53 &
TCPDUMP_PID=$!

# Attendre le d√©marrage de tcpdump
sleep 2

echo "üîç Ex√©cution des requ√™tes DNS..."
# Ex√©cuter plusieurs requ√™tes DNS pour g√©n√©rer du trafic
nslookup $DNS_TARGET 8.8.8.8 > /dev/null 2>&1
nslookup -type=MX google.com 8.8.8.8 > /dev/null 2>&1
nslookup -type=NS google.com 8.8.8.8 > /dev/null 2>&1
nslookup www.github.com 8.8.8.8 > /dev/null 2>&1
nslookup www.stackoverflow.com 8.8.8.8 > /dev/null 2>&1

echo "‚è±Ô∏è  Attente de la fin de la capture..."
wait $TCPDUMP_PID

# V√©rifier le fichier de capture
if [ ! -f "$CAPTURE_FILE" ]; then
    echo "‚ùå Fichier de capture non g√©n√©r√©, exp√©rience √©chou√©e"
    exit 1
fi

PACKET_COUNT=$(tcpdump -r $CAPTURE_FILE 2>/dev/null | wc -l)
echo "‚úÖ Capture termin√©e, $PACKET_COUNT paquets captur√©s"

# Afficher un aper√ßu du contenu captur√©
echo
echo "üìä Aper√ßu des paquets:"
echo "----------------------------------------"
tcpdump -r $CAPTURE_FILE -n -c 10 2>/dev/null
echo "----------------------------------------"

echo
echo "üî¨ Vous pouvez maintenant utiliser les commandes suivantes pour une analyse d√©taill√©e:"
echo
echo "1. Voir tous les paquets:"
echo "   tcpdump -r $CAPTURE_FILE -n -v"
echo
echo "2. Utiliser l'analyseur Python pour g√©n√©rer diagrammes et rapports:"
echo "   python3 udp_analyzer.py $CAPTURE_FILE"
echo
echo "3. Analyser manuellement des paquets sp√©cifiques:"
echo "   tcpdump -r $CAPTURE_FILE -n -X"
echo

# Si l'analyseur Python existe, offrir l'option de l'ex√©cuter
if [ -f "udp_analyzer.py" ]; then
    echo "ü§ñ Voulez-vous ex√©cuter imm√©diatement l'analyseur Python? (y/n)"
    read -r response
    if [ "$response" = "y" ] || [ "$response" = "Y" ]; then
        echo "üöÄ Ex√©cution de l'analyseur..."
        python3 udp_analyzer.py $CAPTURE_FILE
    fi
fi

echo
echo "‚úÖ Exp√©rience d'analyse UDP termin√©e!"
echo "Fichiers d'exp√©rience:"
echo "   - Fichier de capture: $CAPTURE_FILE"
if [ -f "udp_sequence_diagram.png" ]; then
    echo "   - Diagramme de s√©quence: udp_sequence_diagram.png"
fi
if [ -f "udp_analysis_report.md" ]; then
    echo "   - Rapport d'analyse: udp_analysis_report.md"
fi 