#!/bin/bash

# Script d'ex√©cution de l'exp√©rience d'analyse TCP
# Ce script guidera l'utilisateur √† travers les √©tapes de l'exp√©rience d'analyse TCP

echo "================================="
echo "    Exp√©rience d'analyse TCP"
echo "================================="
echo

# V√©rifier les permissions
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå Veuillez ex√©cuter ce script avec sudo pour obtenir les privil√®ges de capture"
    echo "   Utilisation: sudo ./run_tcp_experiment.sh"
    exit 1
fi

# V√©rifier les outils n√©cessaires
echo "üîç V√©rification des outils n√©cessaires..."
missing_tools=()

if ! command -v tcpdump &> /dev/null; then
    missing_tools+=("tcpdump")
fi

if ! command -v curl &> /dev/null; then
    missing_tools+=("curl")
fi

if ! command -v python3 &> /dev/null; then
    missing_tools+=("python3")
fi

if [ ${#missing_tools[@]} -ne 0 ]; then
    echo "‚ùå Outils manquants: ${missing_tools[*]}"
    echo "Veuillez installer: sudo apt-get install tcpdump curl python3"
    exit 1
fi

echo "‚úÖ V√©rification des outils termin√©e"

# Configurer les param√®tres de l'exp√©rience
CAPTURE_FILE="tcp_capture.pcap"
HTTP_PORT=8080
CAPTURE_DURATION=15

echo
echo "üìã Param√®tres de l'exp√©rience:"
echo "   - Fichier de capture: $CAPTURE_FILE"
echo "   - Port HTTP: $HTTP_PORT"
echo "   - Dur√©e de capture: ${CAPTURE_DURATION} secondes"
echo

# √âtape 1: D√©marrer le serveur HTTP simple
echo "üåê D√©marrage du serveur HTTP simple sur le port $HTTP_PORT..."
python3 -m http.server $HTTP_PORT &
HTTP_SERVER_PID=$!

# Attendre que le serveur d√©marre
sleep 3

# V√©rifier que le serveur fonctionne
if ! netstat -tuln | grep ":$HTTP_PORT " > /dev/null; then
    echo "‚ùå √âchec du d√©marrage du serveur HTTP"
    kill $HTTP_SERVER_PID 2>/dev/null
    exit 1
fi

echo "‚úÖ Serveur HTTP d√©marr√© (PID: $HTTP_SERVER_PID)"

# √âtape 2: Commencer la capture TCP
echo "üéØ D√©but de la capture de trafic TCP (${CAPTURE_DURATION} secondes)..."
timeout $CAPTURE_DURATION tcpdump -i any -n -s 0 -w $CAPTURE_FILE port $HTTP_PORT &
TCPDUMP_PID=$!

# Attendre le d√©marrage de tcpdump
sleep 2

echo "üì° G√©n√©ration de trafic HTTP..."
# Effectuer plusieurs requ√™tes HTTP pour g√©n√©rer du trafic TCP
for i in {1..5}; do
    echo "   Requ√™te $i/5..."
    curl -s http://localhost:$HTTP_PORT/ > /dev/null 2>&1
    sleep 1
    
    # Requ√™te pour un fichier inexistant (g√©n√®re 404)
    curl -s http://localhost:$HTTP_PORT/nonexistent.html > /dev/null 2>&1
    sleep 1
done

echo "‚è±Ô∏è  Attente de la fin de la capture..."
wait $TCPDUMP_PID

# Arr√™ter le serveur HTTP
echo "üõë Arr√™t du serveur HTTP..."
kill $HTTP_SERVER_PID 2>/dev/null
wait $HTTP_SERVER_PID 2>/dev/null

# V√©rifier le fichier de capture
if [ ! -f "$CAPTURE_FILE" ]; then
    echo "‚ùå Fichier de capture non g√©n√©r√©, exp√©rience √©chou√©e"
    exit 1
fi

PACKET_COUNT=$(tcpdump -r $CAPTURE_FILE 2>/dev/null | wc -l)
echo "‚úÖ Capture termin√©e, $PACKET_COUNT paquets TCP captur√©s"

# Afficher un aper√ßu du contenu captur√©
echo
echo "üìä Aper√ßu des paquets TCP:"
echo "----------------------------------------"
tcpdump -r $CAPTURE_FILE -n -c 10 2>/dev/null
echo "----------------------------------------"

echo
echo "üî¨ Vous pouvez maintenant utiliser les commandes suivantes pour une analyse d√©taill√©e:"
echo
echo "1. Voir tous les paquets TCP:"
echo "   tcpdump -r $CAPTURE_FILE -n -v"
echo
echo "2. Filtrer les paquets de handshake:"
echo "   tcpdump -r $CAPTURE_FILE -n 'tcp[tcpflags] & tcp-syn != 0'"
echo
echo "3. Utiliser l'analyseur Python pour g√©n√©rer diagrammes et rapports:"
echo "   python3 tcp_analyzer.py $CAPTURE_FILE"
echo
echo "4. Analyser les connexions avec d√©tails:"
echo "   tcpdump -r $CAPTURE_FILE -n -v -A"
echo

# Si l'analyseur Python existe, offrir l'option de l'ex√©cuter
if [ -f "tcp_analyzer.py" ]; then
    echo "ü§ñ Voulez-vous ex√©cuter imm√©diatement l'analyseur Python? (y/n)"
    read -r response
    if [ "$response" = "y" ] || [ "$response" = "Y" ]; then
        echo "üöÄ Ex√©cution de l'analyseur TCP..."
        python3 tcp_analyzer.py $CAPTURE_FILE
    fi
fi

echo
echo "‚úÖ Exp√©rience d'analyse TCP termin√©e!"
echo "Fichiers d'exp√©rience:"
echo "   - Fichier de capture: $CAPTURE_FILE"
if [ -f "tcp_sequence_diagram.png" ]; then
    echo "   - Diagramme de s√©quence: tcp_sequence_diagram.png"
fi
if [ -f "tcp_analysis_report.md" ]; then
    echo "   - Rapport d'analyse: tcp_analysis_report.md"
fi

echo
echo "üîç Points cl√©s observ√©s dans cette exp√©rience:"
echo "   ‚Ä¢ √âtablissement de connexion TCP (3-way handshake)"
echo "   ‚Ä¢ Transfert de donn√©es HTTP avec contr√¥le de flux"
echo "   ‚Ä¢ Fermeture propre des connexions TCP"
echo "   ‚Ä¢ Comparaison avec UDP: TCP garantit la fiabilit√©" 